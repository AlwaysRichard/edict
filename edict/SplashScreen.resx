<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>